&wit.Resolve{
    Worlds: {
        &wit.World{
            Name:    "foo",
            Imports: {
                "a": &wit.TypeDef{
                    Name:       &"a",
                    Kind:       wit.U32Type{},
                    Owner:      &wit.World{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                    _type:      wit._type{},
                },
                "b": &wit.TypeDef{
                    Name:       &"b",
                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:      &wit.World{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                    _type:      wit._type{},
                },
            },
            Exports: {
                "c": &wit.Function{
                    Name:   "c",
                    Kind:   &wit.Freestanding{},
                    Params: {
                        {
                            Name: "a",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Results: {
                        {
                            Name: "",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                },
            },
            Package:    (*wit.Package)(nil),
            Docs:       wit.Docs{},
            _typeOwner: wit._typeOwner{},
        },
        &wit.World{
            Name:    "bar",
            Imports: {
                "interface-0": &wit.Interface{
                    Name:     &"disambiguate",
                    TypeDefs: {
                        "t": &wit.TypeDef{
                            Name:       &"t",
                            Kind:       wit.U32Type{},
                            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:       wit.Docs{},
                            _worldItem: wit._worldItem{},
                            _type:      wit._type{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "foo",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "disambiguate": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {
                            "bar":      &wit.World{(CYCLIC REFERENCE)},
                            "foo":      &wit.World{(CYCLIC REFERENCE)},
                            "the-test": &wit.World{
                                Name:    "the-test",
                                Imports: {
                                    "a": &wit.TypeDef{
                                        Name: &"a",
                                        Kind: &wit.Record{
                                            Fields: {
                                                {
                                                    Name: "x",
                                                    Type: wit.U32Type{},
                                                    Docs: wit.Docs{},
                                                },
                                            },
                                            _typeDefKind: wit._typeDefKind{},
                                        },
                                        Owner:      &wit.World{(CYCLIC REFERENCE)},
                                        Docs:       wit.Docs{},
                                        _worldItem: wit._worldItem{},
                                        _type:      wit._type{},
                                    },
                                    "b": &wit.TypeDef{
                                        Name: &"b",
                                        Kind: &wit.Variant{
                                            Cases: {
                                                {
                                                    Name: "c",
                                                    Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                                    Docs: wit.Docs{},
                                                },
                                            },
                                            _typeDefKind: wit._typeDefKind{},
                                        },
                                        Owner:      &wit.World{(CYCLIC REFERENCE)},
                                        Docs:       wit.Docs{},
                                        _worldItem: wit._worldItem{},
                                        _type:      wit._type{},
                                    },
                                    "foo": &wit.Function{
                                        Name:   "foo",
                                        Kind:   &wit.Freestanding{(CYCLIC REFERENCE)},
                                        Params: {
                                            {
                                                Name: "a",
                                                Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            },
                                        },
                                        Results: {
                                            {
                                                Name: "",
                                                Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            },
                                        },
                                        Docs:       wit.Docs{},
                                        _worldItem: wit._worldItem{},
                                    },
                                },
                                Exports: {
                                    "bar": &wit.Function{
                                        Name:   "bar",
                                        Kind:   &wit.Freestanding{(CYCLIC REFERENCE)},
                                        Params: {
                                            {
                                                Name: "a",
                                                Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            },
                                        },
                                        Results: {
                                            {
                                                Name: "",
                                                Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            },
                                        },
                                        Docs:       wit.Docs{},
                                        _worldItem: wit._worldItem{},
                                    },
                                },
                                Package:    (*wit.Package)(nil),
                                Docs:       wit.Docs{},
                                _typeOwner: wit._typeOwner{},
                            },
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                    _typeOwner: wit._typeOwner{},
                },
                "t": &wit.TypeDef{
                    Name: &"t",
                    Kind: &wit.TypeDef{
                        Name:       &"t",
                        Kind:       wit.U32Type{},
                        Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                        Docs:       wit.Docs{},
                        _worldItem: wit._worldItem{},
                        _type:      wit._type{},
                    },
                    Owner:      &wit.World{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                    _type:      wit._type{},
                },
            },
            Exports: {
                "foo": &wit.Function{
                    Name:    "foo",
                    Kind:    &wit.Freestanding{},
                    Params:  nil,
                    Results: {
                        {
                            Name: "",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                },
            },
            Package:    (*wit.Package)(nil),
            Docs:       wit.Docs{},
            _typeOwner: wit._typeOwner{},
        },
        &wit.World{
            Name:    "the-test",
            Imports: {
                "a": &wit.TypeDef{
                    Name: &"a",
                    Kind: &wit.Record{
                        Fields: {
                            {
                                Name: "x",
                                Type: wit.U32Type{},
                                Docs: wit.Docs{},
                            },
                        },
                        _typeDefKind: wit._typeDefKind{},
                    },
                    Owner:      &wit.World{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                    _type:      wit._type{},
                },
                "b": &wit.TypeDef{
                    Name: &"b",
                    Kind: &wit.Variant{
                        Cases: {
                            {
                                Name: "c",
                                Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                Docs: wit.Docs{},
                            },
                        },
                        _typeDefKind: wit._typeDefKind{},
                    },
                    Owner:      &wit.World{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                    _type:      wit._type{},
                },
                "foo": &wit.Function{
                    Name:   "foo",
                    Kind:   &wit.Freestanding{},
                    Params: {
                        {
                            Name: "a",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Results: {
                        {
                            Name: "",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                },
            },
            Exports: {
                "bar": &wit.Function{
                    Name:   "bar",
                    Kind:   &wit.Freestanding{},
                    Params: {
                        {
                            Name: "a",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Results: {
                        {
                            Name: "",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                },
            },
            Package:    (*wit.Package)(nil),
            Docs:       wit.Docs{},
            _typeOwner: wit._typeOwner{},
        },
    },
    Interfaces: {
        &wit.Interface{
            Name:     &"disambiguate",
            TypeDefs: {
                "t": &wit.TypeDef{
                    Name:       &"t",
                    Kind:       wit.U32Type{},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                    _worldItem: wit._worldItem{},
                    _type:      wit._type{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "foo",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "disambiguate": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {
                    "bar":      &wit.World{(CYCLIC REFERENCE)},
                    "foo":      &wit.World{(CYCLIC REFERENCE)},
                    "the-test": &wit.World{(CYCLIC REFERENCE)},
                },
                Docs: wit.Docs{},
            },
            Docs:       wit.Docs{},
            _worldItem: wit._worldItem{},
            _typeOwner: wit._typeOwner{},
        },
    },
    TypeDefs: {
        &wit.TypeDef{
            Name:       &"t",
            Kind:       wit.U32Type{},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
            _worldItem: wit._worldItem{},
            _type:      wit._type{},
        },
        &wit.TypeDef{
            Name:       &"a",
            Kind:       wit.U32Type{},
            Owner:      &wit.World{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
            _worldItem: wit._worldItem{},
            _type:      wit._type{},
        },
        &wit.TypeDef{
            Name:       &"b",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.World{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
            _worldItem: wit._worldItem{},
            _type:      wit._type{},
        },
        &wit.TypeDef{
            Name:       &"t",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.World{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
            _worldItem: wit._worldItem{},
            _type:      wit._type{},
        },
        &wit.TypeDef{
            Name: &"a",
            Kind: &wit.Record{
                Fields: {
                    {
                        Name: "x",
                        Type: wit.U32Type{},
                        Docs: wit.Docs{},
                    },
                },
                _typeDefKind: wit._typeDefKind{},
            },
            Owner:      &wit.World{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
            _worldItem: wit._worldItem{},
            _type:      wit._type{},
        },
        &wit.TypeDef{
            Name: &"b",
            Kind: &wit.Variant{
                Cases: {
                    {
                        Name: "c",
                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        Docs: wit.Docs{},
                    },
                },
                _typeDefKind: wit._typeDefKind{},
            },
            Owner:      &wit.World{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
            _worldItem: wit._worldItem{},
            _type:      wit._type{},
        },
    },
    Packages: {
        &wit.Package{
            Name: wit.PackageName{
                Namespace: "foo",
                Name:      "foo",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "disambiguate": &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {
                "bar":      &wit.World{(CYCLIC REFERENCE)},
                "foo":      &wit.World{(CYCLIC REFERENCE)},
                "the-test": &wit.World{(CYCLIC REFERENCE)},
            },
            Docs: wit.Docs{},
        },
    },
}