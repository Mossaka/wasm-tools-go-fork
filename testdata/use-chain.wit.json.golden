&wit.Resolve{
  Worlds:     []*wit.World(nil),
  Interfaces: []*wit.Interface{
    &wit.Interface{
      Name:     &"foo",
      TypeDefs: map[string]*wit.TypeDef{
        "foo": &wit.TypeDef{
          Name: &"foo",
          Kind: &wit.Record{
            Fields: []wit.Field(nil),
          },
          Owner: &wit.Interface{...},
          Docs:  wit.Docs{
            Contents: "",
          },
        },
      },
      Functions: map[string]*wit.Function{},
      Package:   &wit.Package{
        Name: wit.PackageName{
          Namespace: "foo",
          Name:      "name",
          Version:   (*semver.Version)(nil),
        },
        Interfaces: map[string]*wit.Interface{
          "foo":  &wit.Interface{...},
          "name": &wit.Interface{
            Name:     &"name",
            TypeDefs: map[string]*wit.TypeDef{
              "foo": &wit.TypeDef{
                Name:  &"foo",
                Kind:  &wit.TypeDef{...},
                Owner: &wit.Interface{...},
                Docs:  wit.Docs{
                  Contents: "",
                },
              },
            },
            Functions: map[string]*wit.Function{},
            Package:   &wit.Package{...},
            Docs:      wit.Docs{
              Contents: "",
            },
          },
        },
        Worlds: map[string]*wit.World{},
        Docs:   wit.Docs{
          Contents: "",
        },
      },
      Docs: wit.Docs{
        Contents: "",
      },
    },
    &wit.Interface{...},
  },
  TypeDefs: []*wit.TypeDef{
    &wit.TypeDef{...},
    &wit.TypeDef{...},
  },
  Packages: []*wit.Package{
    &wit.Package{...},
  },
}