&wit.Resolve{
    Worlds: {
        &wit.World{
            Name:    "wasi",
            Imports: {
                "interface-7": &wit.Interface{
                    Name:     &"clocks",
                    TypeDefs: {
                        "timestamp": &wit.TypeDef{
                            Name:      &"timestamp",
                            Kind:      wit.U64Type{},
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "wasi",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                            "filesystem": &wit.Interface{
                                Name:     &"filesystem",
                                TypeDefs: {
                                    "stat": &wit.TypeDef{
                                        Name: &"stat",
                                        Kind: &wit.Record{
                                            Fields: {
                                                {
                                                    Name: "ino",
                                                    Type: wit.U64Type{},
                                                    Docs: wit.Docs{},
                                                },
                                            },
                                            typeDefKind: wit.typeDefKind{},
                                        },
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                },
                                Functions: {},
                                Package:   &wit.Package{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                typeOwner: wit.typeOwner{},
                            },
                        },
                        Worlds: {
                            "wasi": &wit.World{(CYCLIC REFERENCE)},
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
                "interface-8": &wit.Interface{
                    Name:     &"filesystem",
                    TypeDefs: {
                        "stat": &wit.TypeDef{
                            Name: &"stat",
                            Kind: &wit.Record{
                                Fields: {
                                    {
                                        Name: "ino",
                                        Type: wit.U64Type{},
                                        Docs: wit.Docs{},
                                    },
                                },
                                typeDefKind: wit.typeDefKind{},
                            },
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "wasi",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                            "filesystem": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {
                            "wasi": &wit.World{(CYCLIC REFERENCE)},
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
            },
            Exports:   {},
            Package:   (*wit.Package)(nil),
            Docs:      wit.Docs{},
            typeOwner: wit.typeOwner{},
        },
        &wit.World{
            Name:    "my-world",
            Imports: {
                "interface-7": &wit.Interface{
                    Name:     &"clocks",
                    TypeDefs: {
                        "timestamp": &wit.TypeDef{
                            Name:      &"timestamp",
                            Kind:      wit.U64Type{},
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "wasi",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                            "filesystem": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {
                            "wasi": &wit.World{(CYCLIC REFERENCE)},
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
                "interface-8": &wit.Interface{
                    Name:     &"filesystem",
                    TypeDefs: {
                        "stat": &wit.TypeDef{
                            Name: &"stat",
                            Kind: &wit.Record{
                                Fields: {
                                    {
                                        Name: "ino",
                                        Type: wit.U64Type{},
                                        Docs: wit.Docs{},
                                    },
                                },
                                typeDefKind: wit.typeDefKind{},
                            },
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "wasi",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                            "filesystem": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {
                            "wasi": &wit.World{(CYCLIC REFERENCE)},
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
            },
            Exports: {
                "interface-1": &wit.Interface{
                    Name:      &"saas",
                    TypeDefs:  {},
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "corp",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "saas": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {},
                        Docs:   wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
            },
            Package:   (*wit.Package)(nil),
            Docs:      wit.Docs{},
            typeOwner: wit.typeOwner{},
        },
        &wit.World{
            Name:    "my-world2",
            Imports: {
                "interface-7": &wit.Interface{
                    Name:     &"clocks",
                    TypeDefs: {
                        "timestamp": &wit.TypeDef{
                            Name:      &"timestamp",
                            Kind:      wit.U64Type{},
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "wasi",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                            "filesystem": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {
                            "wasi": &wit.World{(CYCLIC REFERENCE)},
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
                "interface-8": &wit.Interface{
                    Name:     &"filesystem",
                    TypeDefs: {
                        "stat": &wit.TypeDef{
                            Name: &"stat",
                            Kind: &wit.Record{
                                Fields: {
                                    {
                                        Name: "ino",
                                        Type: wit.U64Type{},
                                        Docs: wit.Docs{},
                                    },
                                },
                                typeDefKind: wit.typeDefKind{},
                            },
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "wasi",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                            "filesystem": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {
                            "wasi": &wit.World{(CYCLIC REFERENCE)},
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
            },
            Exports: {
                "interface-1": &wit.Interface{
                    Name:      &"saas",
                    TypeDefs:  {},
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "corp",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "saas": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {},
                        Docs:   wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
                "interface-9": &wit.Interface{
                    Name:     &"foo",
                    TypeDefs: {
                        "stat": &wit.TypeDef{
                            Name:      &"stat",
                            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                        "timestamp": &wit.TypeDef{
                            Name:      &"timestamp",
                            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "root",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "bar": &wit.Interface{
                                Name:     &"bar",
                                TypeDefs: {
                                    "another-type": &wit.TypeDef{
                                        Name: &"another-type",
                                        Kind: &wit.TypeDef{
                                            Name:  &"another-type",
                                            Kind:  wit.U32Type{},
                                            Owner: &wit.Interface{
                                                Name:     &"some-interface",
                                                TypeDefs: {
                                                    "another-type": &wit.TypeDef{(CYCLIC REFERENCE)},
                                                },
                                                Functions: {},
                                                Package:   &wit.Package{
                                                    Name: wit.PackageName{
                                                        Namespace: "foo",
                                                        Name:      "some-pkg",
                                                        Version:   (*semver.Version)(nil),
                                                    },
                                                    Interfaces: {
                                                        "another-interface": &!%v(DEPTH EXCEEDED),
                                                        "some-interface":    &!%v(DEPTH EXCEEDED),
                                                        "the-default":       &!%v(DEPTH EXCEEDED),
                                                    },
                                                    Worlds: {},
                                                    Docs:   wit.Docs{},
                                                },
                                                Docs:      wit.Docs{},
                                                worldItem: wit.worldItem{},
                                                typeOwner: wit.typeOwner{},
                                            },
                                            Docs:      wit.Docs{},
                                            worldItem: wit.worldItem{},
                                            type_:     wit.type_{},
                                        },
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                    "from-default": &wit.TypeDef{
                                        Name: &"from-default",
                                        Kind: &wit.TypeDef{
                                            Name:  &"from-default",
                                            Kind:  wit.StringType{},
                                            Owner: &wit.Interface{
                                                Name:     &"the-default",
                                                TypeDefs: {
                                                    "from-default": &wit.TypeDef{(CYCLIC REFERENCE)},
                                                },
                                                Functions: {},
                                                Package:   &wit.Package{
                                                    Name: wit.PackageName{
                                                        Namespace: "foo",
                                                        Name:      "some-pkg",
                                                        Version:   (*semver.Version)(nil),
                                                    },
                                                    Interfaces: {
                                                        "another-interface": &!%v(DEPTH EXCEEDED),
                                                        "some-interface":    &!%v(DEPTH EXCEEDED),
                                                        "the-default":       &!%v(DEPTH EXCEEDED),
                                                    },
                                                    Worlds: {},
                                                    Docs:   wit.Docs{},
                                                },
                                                Docs:      wit.Docs{},
                                                worldItem: wit.worldItem{},
                                                typeOwner: wit.typeOwner{},
                                            },
                                            Docs:      wit.Docs{},
                                            worldItem: wit.worldItem{},
                                            type_:     wit.type_{},
                                        },
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                    "yet-another-type": &wit.TypeDef{
                                        Name: &"yet-another-type",
                                        Kind: &wit.TypeDef{
                                            Name:  &"yet-another-type",
                                            Kind:  wit.U8Type{},
                                            Owner: &wit.Interface{
                                                Name:     &"another-interface",
                                                TypeDefs: {
                                                    "yet-another-type": &wit.TypeDef{(CYCLIC REFERENCE)},
                                                },
                                                Functions: {},
                                                Package:   &wit.Package{
                                                    Name: wit.PackageName{
                                                        Namespace: "foo",
                                                        Name:      "some-pkg",
                                                        Version:   (*semver.Version)(nil),
                                                    },
                                                    Interfaces: {
                                                        "another-interface": &!%v(DEPTH EXCEEDED),
                                                        "some-interface":    &!%v(DEPTH EXCEEDED),
                                                        "the-default":       &!%v(DEPTH EXCEEDED),
                                                    },
                                                    Worlds: {},
                                                    Docs:   wit.Docs{},
                                                },
                                                Docs:      wit.Docs{},
                                                worldItem: wit.worldItem{},
                                                typeOwner: wit.typeOwner{},
                                            },
                                            Docs:      wit.Docs{},
                                            worldItem: wit.worldItem{},
                                            type_:     wit.type_{},
                                        },
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                },
                                Functions: {},
                                Package:   &wit.Package{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                typeOwner: wit.typeOwner{},
                            },
                            "foo":  &wit.Interface{(CYCLIC REFERENCE)},
                            "use1": &wit.Interface{
                                Name:     &"use1",
                                TypeDefs: {
                                    "some-type": &wit.TypeDef{
                                        Name: &"some-type",
                                        Kind: &wit.TypeDef{
                                            Name:  &"some-type",
                                            Kind:  wit.U32Type{},
                                            Owner: &wit.Interface{
                                                Name:     &"the-default",
                                                TypeDefs: {
                                                    "some-type": &wit.TypeDef{(CYCLIC REFERENCE)},
                                                },
                                                Functions: {},
                                                Package:   &wit.Package{
                                                    Name: wit.PackageName{
                                                        Namespace: "foo",
                                                        Name:      "foreign-pkg",
                                                        Version:   (*semver.Version)(nil),
                                                    },
                                                    Interfaces: {
                                                        "the-default": &!%v(DEPTH EXCEEDED),
                                                    },
                                                    Worlds: {},
                                                    Docs:   wit.Docs{},
                                                },
                                                Docs:      wit.Docs{},
                                                worldItem: wit.worldItem{},
                                                typeOwner: wit.typeOwner{},
                                            },
                                            Docs:      wit.Docs{},
                                            worldItem: wit.worldItem{},
                                            type_:     wit.type_{},
                                        },
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                },
                                Functions: {},
                                Package:   &wit.Package{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                typeOwner: wit.typeOwner{},
                            },
                            "use2": &wit.Interface{
                                Name:     &"use2",
                                TypeDefs: {
                                    "some-type": &wit.TypeDef{
                                        Name: &"some-type",
                                        Kind: &wit.TypeDef{
                                            Name:  &"some-type",
                                            Kind:  wit.U32Type{},
                                            Owner: &wit.Interface{
                                                Name:     &"the-default",
                                                TypeDefs: {
                                                    "some-type": &wit.TypeDef{(CYCLIC REFERENCE)},
                                                },
                                                Functions: {},
                                                Package:   &wit.Package{
                                                    Name: wit.PackageName{
                                                        Namespace: "foo",
                                                        Name:      "foreign-pkg",
                                                        Version:   (*semver.Version)(nil),
                                                    },
                                                    Interfaces: {
                                                        "the-default": &!%v(DEPTH EXCEEDED),
                                                    },
                                                    Worlds: {},
                                                    Docs:   wit.Docs{},
                                                },
                                                Docs:      wit.Docs{},
                                                worldItem: wit.worldItem{},
                                                typeOwner: wit.typeOwner{},
                                            },
                                            Docs:      wit.Docs{},
                                            worldItem: wit.worldItem{},
                                            type_:     wit.type_{},
                                        },
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                },
                                Functions: {},
                                Package:   &wit.Package{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                typeOwner: wit.typeOwner{},
                            },
                        },
                        Worlds: {
                            "bars-world": &wit.World{
                                Name:    "bars-world",
                                Imports: {
                                    "interface-0": &wit.Interface{
                                        Name:      &"other-interface",
                                        TypeDefs:  {},
                                        Functions: {},
                                        Package:   &wit.Package{
                                            Name: wit.PackageName{
                                                Namespace: "foo",
                                                Name:      "another-pkg",
                                                Version:   (*semver.Version)(nil),
                                            },
                                            Interfaces: {
                                                "other-interface": &wit.Interface{(CYCLIC REFERENCE)},
                                            },
                                            Worlds: {},
                                            Docs:   wit.Docs{},
                                        },
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        typeOwner: wit.typeOwner{},
                                    },
                                    "interface-4": &wit.Interface{
                                        Name:     &"the-default",
                                        TypeDefs: {
                                            "from-default": &wit.TypeDef{(CYCLIC REFERENCE)},
                                        },
                                        Functions: {},
                                        Package:   &wit.Package{
                                            Name: wit.PackageName{
                                                Namespace: "foo",
                                                Name:      "some-pkg",
                                                Version:   (*semver.Version)(nil),
                                            },
                                            Interfaces: {
                                                "another-interface": &wit.Interface{(CYCLIC REFERENCE)},
                                                "some-interface":    &wit.Interface{(CYCLIC REFERENCE)},
                                                "the-default":       &wit.Interface{(CYCLIC REFERENCE)},
                                            },
                                            Worlds: {},
                                            Docs:   wit.Docs{},
                                        },
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        typeOwner: wit.typeOwner{},
                                    },
                                },
                                Exports:   {},
                                Package:   (*wit.Package)(nil),
                                Docs:      wit.Docs{},
                                typeOwner: wit.typeOwner{},
                            },
                            "my-world":     &wit.World{(CYCLIC REFERENCE)},
                            "my-world2":    &wit.World{(CYCLIC REFERENCE)},
                            "unionw-world": &wit.World{
                                Name:    "unionw-world",
                                Imports: {
                                    "interface-7": &wit.Interface{(CYCLIC REFERENCE)},
                                    "interface-8": &wit.Interface{(CYCLIC REFERENCE)},
                                },
                                Exports: {
                                    "interface-1": &wit.Interface{(CYCLIC REFERENCE)},
                                    "interface-9": &wit.Interface{(CYCLIC REFERENCE)},
                                },
                                Package:   (*wit.Package)(nil),
                                Docs:      wit.Docs{},
                                typeOwner: wit.typeOwner{},
                            },
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
            },
            Package:   (*wit.Package)(nil),
            Docs:      wit.Docs{},
            typeOwner: wit.typeOwner{},
        },
        &wit.World{
            Name:    "bars-world",
            Imports: {
                "interface-0": &wit.Interface{
                    Name:      &"other-interface",
                    TypeDefs:  {},
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "another-pkg",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "other-interface": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {},
                        Docs:   wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
                "interface-4": &wit.Interface{
                    Name:     &"the-default",
                    TypeDefs: {
                        "from-default": &wit.TypeDef{
                            Name:      &"from-default",
                            Kind:      wit.StringType{},
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "some-pkg",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "another-interface": &wit.Interface{
                                Name:     &"another-interface",
                                TypeDefs: {
                                    "yet-another-type": &wit.TypeDef{
                                        Name:      &"yet-another-type",
                                        Kind:      wit.U8Type{},
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                },
                                Functions: {},
                                Package:   &wit.Package{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                typeOwner: wit.typeOwner{},
                            },
                            "some-interface": &wit.Interface{
                                Name:     &"some-interface",
                                TypeDefs: {
                                    "another-type": &wit.TypeDef{
                                        Name:      &"another-type",
                                        Kind:      wit.U32Type{},
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                },
                                Functions: {},
                                Package:   &wit.Package{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                typeOwner: wit.typeOwner{},
                            },
                            "the-default": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {},
                        Docs:   wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
            },
            Exports:   {},
            Package:   (*wit.Package)(nil),
            Docs:      wit.Docs{},
            typeOwner: wit.typeOwner{},
        },
        &wit.World{
            Name:    "unionw-world",
            Imports: {
                "interface-7": &wit.Interface{
                    Name:     &"clocks",
                    TypeDefs: {
                        "timestamp": &wit.TypeDef{
                            Name:      &"timestamp",
                            Kind:      wit.U64Type{},
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "wasi",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                            "filesystem": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {
                            "wasi": &wit.World{(CYCLIC REFERENCE)},
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
                "interface-8": &wit.Interface{
                    Name:     &"filesystem",
                    TypeDefs: {
                        "stat": &wit.TypeDef{
                            Name: &"stat",
                            Kind: &wit.Record{
                                Fields: {
                                    {
                                        Name: "ino",
                                        Type: wit.U64Type{},
                                        Docs: wit.Docs{},
                                    },
                                },
                                typeDefKind: wit.typeDefKind{},
                            },
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "wasi",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                            "filesystem": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {
                            "wasi": &wit.World{(CYCLIC REFERENCE)},
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
            },
            Exports: {
                "interface-1": &wit.Interface{
                    Name:      &"saas",
                    TypeDefs:  {},
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "corp",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "saas": &wit.Interface{(CYCLIC REFERENCE)},
                        },
                        Worlds: {},
                        Docs:   wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
                "interface-9": &wit.Interface{
                    Name:     &"foo",
                    TypeDefs: {
                        "stat": &wit.TypeDef{
                            Name:      &"stat",
                            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                        "timestamp": &wit.TypeDef{
                            Name:      &"timestamp",
                            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:      wit.Docs{},
                            worldItem: wit.worldItem{},
                            type_:     wit.type_{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{
                        Name: wit.PackageName{
                            Namespace: "foo",
                            Name:      "root",
                            Version:   (*semver.Version)(nil),
                        },
                        Interfaces: {
                            "bar": &wit.Interface{
                                Name:     &"bar",
                                TypeDefs: {
                                    "another-type": &wit.TypeDef{
                                        Name:      &"another-type",
                                        Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                    "from-default": &wit.TypeDef{
                                        Name:      &"from-default",
                                        Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                    "yet-another-type": &wit.TypeDef{
                                        Name:      &"yet-another-type",
                                        Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                },
                                Functions: {},
                                Package:   &wit.Package{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                typeOwner: wit.typeOwner{},
                            },
                            "foo":  &wit.Interface{(CYCLIC REFERENCE)},
                            "use1": &wit.Interface{
                                Name:     &"use1",
                                TypeDefs: {
                                    "some-type": &wit.TypeDef{
                                        Name: &"some-type",
                                        Kind: &wit.TypeDef{
                                            Name:  &"some-type",
                                            Kind:  wit.U32Type{},
                                            Owner: &wit.Interface{
                                                Name:     &"the-default",
                                                TypeDefs: {
                                                    "some-type": &wit.TypeDef{(CYCLIC REFERENCE)},
                                                },
                                                Functions: {},
                                                Package:   &wit.Package{
                                                    Name: wit.PackageName{
                                                        Namespace: "foo",
                                                        Name:      "foreign-pkg",
                                                        Version:   (*semver.Version)(nil),
                                                    },
                                                    Interfaces: {
                                                        "the-default": &!%v(DEPTH EXCEEDED),
                                                    },
                                                    Worlds: {},
                                                    Docs:   wit.Docs{},
                                                },
                                                Docs:      wit.Docs{},
                                                worldItem: wit.worldItem{},
                                                typeOwner: wit.typeOwner{},
                                            },
                                            Docs:      wit.Docs{},
                                            worldItem: wit.worldItem{},
                                            type_:     wit.type_{},
                                        },
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                },
                                Functions: {},
                                Package:   &wit.Package{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                typeOwner: wit.typeOwner{},
                            },
                            "use2": &wit.Interface{
                                Name:     &"use2",
                                TypeDefs: {
                                    "some-type": &wit.TypeDef{
                                        Name: &"some-type",
                                        Kind: &wit.TypeDef{
                                            Name:  &"some-type",
                                            Kind:  wit.U32Type{},
                                            Owner: &wit.Interface{
                                                Name:     &"the-default",
                                                TypeDefs: {
                                                    "some-type": &wit.TypeDef{(CYCLIC REFERENCE)},
                                                },
                                                Functions: {},
                                                Package:   &wit.Package{
                                                    Name: wit.PackageName{
                                                        Namespace: "foo",
                                                        Name:      "foreign-pkg",
                                                        Version:   (*semver.Version)(nil),
                                                    },
                                                    Interfaces: {
                                                        "the-default": &!%v(DEPTH EXCEEDED),
                                                    },
                                                    Worlds: {},
                                                    Docs:   wit.Docs{},
                                                },
                                                Docs:      wit.Docs{},
                                                worldItem: wit.worldItem{},
                                                typeOwner: wit.typeOwner{},
                                            },
                                            Docs:      wit.Docs{},
                                            worldItem: wit.worldItem{},
                                            type_:     wit.type_{},
                                        },
                                        Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                        worldItem: wit.worldItem{},
                                        type_:     wit.type_{},
                                    },
                                },
                                Functions: {},
                                Package:   &wit.Package{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                typeOwner: wit.typeOwner{},
                            },
                        },
                        Worlds: {
                            "bars-world":   &wit.World{(CYCLIC REFERENCE)},
                            "my-world":     &wit.World{(CYCLIC REFERENCE)},
                            "my-world2":    &wit.World{(CYCLIC REFERENCE)},
                            "unionw-world": &wit.World{(CYCLIC REFERENCE)},
                        },
                        Docs: wit.Docs{},
                    },
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    typeOwner: wit.typeOwner{},
                },
            },
            Package:   (*wit.Package)(nil),
            Docs:      wit.Docs{},
            typeOwner: wit.typeOwner{},
        },
    },
    Interfaces: {
        &wit.Interface{
            Name:      &"other-interface",
            TypeDefs:  {},
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "another-pkg",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "other-interface": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:      &"saas",
            TypeDefs:  {},
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "corp",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "saas": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:      &"i",
            TypeDefs:  {},
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "different-pkg",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "i": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"the-default",
            TypeDefs: {
                "some-type": &wit.TypeDef{
                    Name:      &"some-type",
                    Kind:      wit.U32Type{},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "foreign-pkg",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "the-default": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"the-default",
            TypeDefs: {
                "from-default": &wit.TypeDef{
                    Name:      &"from-default",
                    Kind:      wit.StringType{},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "some-pkg",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "another-interface": &wit.Interface{
                        Name:     &"another-interface",
                        TypeDefs: {
                            "yet-another-type": &wit.TypeDef{
                                Name:      &"yet-another-type",
                                Kind:      wit.U8Type{},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                    "some-interface": &wit.Interface{
                        Name:     &"some-interface",
                        TypeDefs: {
                            "another-type": &wit.TypeDef{
                                Name:      &"another-type",
                                Kind:      wit.U32Type{},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                    "the-default": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"some-interface",
            TypeDefs: {
                "another-type": &wit.TypeDef{
                    Name:      &"another-type",
                    Kind:      wit.U32Type{},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "some-pkg",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "another-interface": &wit.Interface{
                        Name:     &"another-interface",
                        TypeDefs: {
                            "yet-another-type": &wit.TypeDef{
                                Name:      &"yet-another-type",
                                Kind:      wit.U8Type{},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                    "some-interface": &wit.Interface{(CYCLIC REFERENCE)},
                    "the-default":    &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"another-interface",
            TypeDefs: {
                "yet-another-type": &wit.TypeDef{
                    Name:      &"yet-another-type",
                    Kind:      wit.U8Type{},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "some-pkg",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "another-interface": &wit.Interface{(CYCLIC REFERENCE)},
                    "some-interface":    &wit.Interface{(CYCLIC REFERENCE)},
                    "the-default":       &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"clocks",
            TypeDefs: {
                "timestamp": &wit.TypeDef{
                    Name:      &"timestamp",
                    Kind:      wit.U64Type{},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "wasi",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                    "filesystem": &wit.Interface{
                        Name:     &"filesystem",
                        TypeDefs: {
                            "stat": &wit.TypeDef{
                                Name: &"stat",
                                Kind: &wit.Record{
                                    Fields: {
                                        {
                                            Name: "ino",
                                            Type: wit.U64Type{},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                    typeDefKind: wit.typeDefKind{},
                                },
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                },
                Worlds: {
                    "wasi": &wit.World{(CYCLIC REFERENCE)},
                },
                Docs: wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"filesystem",
            TypeDefs: {
                "stat": &wit.TypeDef{
                    Name: &"stat",
                    Kind: &wit.Record{
                        Fields: {
                            {
                                Name: "ino",
                                Type: wit.U64Type{},
                                Docs: wit.Docs{},
                            },
                        },
                        typeDefKind: wit.typeDefKind{},
                    },
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "wasi",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                    "filesystem": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {
                    "wasi": &wit.World{(CYCLIC REFERENCE)},
                },
                Docs: wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"foo",
            TypeDefs: {
                "stat": &wit.TypeDef{
                    Name:      &"stat",
                    Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
                "timestamp": &wit.TypeDef{
                    Name:      &"timestamp",
                    Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "root",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar": &wit.Interface{
                        Name:     &"bar",
                        TypeDefs: {
                            "another-type": &wit.TypeDef{
                                Name:      &"another-type",
                                Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                            "from-default": &wit.TypeDef{
                                Name:      &"from-default",
                                Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                            "yet-another-type": &wit.TypeDef{
                                Name:      &"yet-another-type",
                                Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                    "foo":  &wit.Interface{(CYCLIC REFERENCE)},
                    "use1": &wit.Interface{
                        Name:     &"use1",
                        TypeDefs: {
                            "some-type": &wit.TypeDef{
                                Name:      &"some-type",
                                Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                    "use2": &wit.Interface{
                        Name:     &"use2",
                        TypeDefs: {
                            "some-type": &wit.TypeDef{
                                Name:      &"some-type",
                                Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                },
                Worlds: {
                    "bars-world":   &wit.World{(CYCLIC REFERENCE)},
                    "my-world":     &wit.World{(CYCLIC REFERENCE)},
                    "my-world2":    &wit.World{(CYCLIC REFERENCE)},
                    "unionw-world": &wit.World{(CYCLIC REFERENCE)},
                },
                Docs: wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"bar",
            TypeDefs: {
                "another-type": &wit.TypeDef{
                    Name:      &"another-type",
                    Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
                "from-default": &wit.TypeDef{
                    Name:      &"from-default",
                    Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
                "yet-another-type": &wit.TypeDef{
                    Name:      &"yet-another-type",
                    Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "root",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar":  &wit.Interface{(CYCLIC REFERENCE)},
                    "foo":  &wit.Interface{(CYCLIC REFERENCE)},
                    "use1": &wit.Interface{
                        Name:     &"use1",
                        TypeDefs: {
                            "some-type": &wit.TypeDef{
                                Name:      &"some-type",
                                Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                    "use2": &wit.Interface{
                        Name:     &"use2",
                        TypeDefs: {
                            "some-type": &wit.TypeDef{
                                Name:      &"some-type",
                                Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                },
                Worlds: {
                    "bars-world":   &wit.World{(CYCLIC REFERENCE)},
                    "my-world":     &wit.World{(CYCLIC REFERENCE)},
                    "my-world2":    &wit.World{(CYCLIC REFERENCE)},
                    "unionw-world": &wit.World{(CYCLIC REFERENCE)},
                },
                Docs: wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"use1",
            TypeDefs: {
                "some-type": &wit.TypeDef{
                    Name:      &"some-type",
                    Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "root",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar":  &wit.Interface{(CYCLIC REFERENCE)},
                    "foo":  &wit.Interface{(CYCLIC REFERENCE)},
                    "use1": &wit.Interface{(CYCLIC REFERENCE)},
                    "use2": &wit.Interface{
                        Name:     &"use2",
                        TypeDefs: {
                            "some-type": &wit.TypeDef{
                                Name:      &"some-type",
                                Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:      wit.Docs{},
                                worldItem: wit.worldItem{},
                                type_:     wit.type_{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                        worldItem: wit.worldItem{},
                        typeOwner: wit.typeOwner{},
                    },
                },
                Worlds: {
                    "bars-world":   &wit.World{(CYCLIC REFERENCE)},
                    "my-world":     &wit.World{(CYCLIC REFERENCE)},
                    "my-world2":    &wit.World{(CYCLIC REFERENCE)},
                    "unionw-world": &wit.World{(CYCLIC REFERENCE)},
                },
                Docs: wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
        &wit.Interface{
            Name:     &"use2",
            TypeDefs: {
                "some-type": &wit.TypeDef{
                    Name:      &"some-type",
                    Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:     &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                    worldItem: wit.worldItem{},
                    type_:     wit.type_{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.PackageName{
                    Namespace: "foo",
                    Name:      "root",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar":  &wit.Interface{(CYCLIC REFERENCE)},
                    "foo":  &wit.Interface{(CYCLIC REFERENCE)},
                    "use1": &wit.Interface{(CYCLIC REFERENCE)},
                    "use2": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {
                    "bars-world":   &wit.World{(CYCLIC REFERENCE)},
                    "my-world":     &wit.World{(CYCLIC REFERENCE)},
                    "my-world2":    &wit.World{(CYCLIC REFERENCE)},
                    "unionw-world": &wit.World{(CYCLIC REFERENCE)},
                },
                Docs: wit.Docs{},
            },
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            typeOwner: wit.typeOwner{},
        },
    },
    TypeDefs: {
        &wit.TypeDef{
            Name:      &"some-type",
            Kind:      wit.U32Type{},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"from-default",
            Kind:      wit.StringType{},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"another-type",
            Kind:      wit.U32Type{},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"yet-another-type",
            Kind:      wit.U8Type{},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"timestamp",
            Kind:      wit.U64Type{},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name: &"stat",
            Kind: &wit.Record{
                Fields: {
                    {
                        Name: "ino",
                        Type: wit.U64Type{},
                        Docs: wit.Docs{},
                    },
                },
                typeDefKind: wit.typeDefKind{},
            },
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"timestamp",
            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"stat",
            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"from-default",
            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"another-type",
            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"yet-another-type",
            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"some-type",
            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
        &wit.TypeDef{
            Name:      &"some-type",
            Kind:      &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:     &wit.Interface{(CYCLIC REFERENCE)},
            Docs:      wit.Docs{},
            worldItem: wit.worldItem{},
            type_:     wit.type_{},
        },
    },
    Packages: {
        &wit.Package{
            Name: wit.PackageName{
                Namespace: "foo",
                Name:      "another-pkg",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "other-interface": &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {},
            Docs:   wit.Docs{},
        },
        &wit.Package{
            Name: wit.PackageName{
                Namespace: "foo",
                Name:      "corp",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "saas": &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {},
            Docs:   wit.Docs{},
        },
        &wit.Package{
            Name: wit.PackageName{
                Namespace: "foo",
                Name:      "different-pkg",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "i": &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {},
            Docs:   wit.Docs{},
        },
        &wit.Package{
            Name: wit.PackageName{
                Namespace: "foo",
                Name:      "foreign-pkg",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "the-default": &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {},
            Docs:   wit.Docs{},
        },
        &wit.Package{
            Name: wit.PackageName{
                Namespace: "foo",
                Name:      "some-pkg",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "another-interface": &wit.Interface{(CYCLIC REFERENCE)},
                "some-interface":    &wit.Interface{(CYCLIC REFERENCE)},
                "the-default":       &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {},
            Docs:   wit.Docs{},
        },
        &wit.Package{
            Name: wit.PackageName{
                Namespace: "foo",
                Name:      "wasi",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "clocks":     &wit.Interface{(CYCLIC REFERENCE)},
                "filesystem": &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {
                "wasi": &wit.World{(CYCLIC REFERENCE)},
            },
            Docs: wit.Docs{},
        },
        &wit.Package{
            Name: wit.PackageName{
                Namespace: "foo",
                Name:      "root",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "bar":  &wit.Interface{(CYCLIC REFERENCE)},
                "foo":  &wit.Interface{(CYCLIC REFERENCE)},
                "use1": &wit.Interface{(CYCLIC REFERENCE)},
                "use2": &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {
                "bars-world":   &wit.World{(CYCLIC REFERENCE)},
                "my-world":     &wit.World{(CYCLIC REFERENCE)},
                "my-world2":    &wit.World{(CYCLIC REFERENCE)},
                "unionw-world": &wit.World{(CYCLIC REFERENCE)},
            },
            Docs: wit.Docs{},
        },
    },
}