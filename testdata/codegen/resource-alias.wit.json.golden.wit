package my:resources;

interface e1 {
	resource x {
		constructor(s: string);
		get: func() -> string;
	}
	record foo { x: x }
	a: func(f: foo) -> list<x>;
}

interface e2 {
	use e1.{x};
	use e1.{foo as bar};
	record foo { x: x }
	a: func(f: foo, g: bar) -> list<x>;
}

world resources {
	import e1;
	import e2;
	use e2.{x};
	export frobnicate: func(x: list<x>) -> list<x>;
	export e1;
	export e2;
}
