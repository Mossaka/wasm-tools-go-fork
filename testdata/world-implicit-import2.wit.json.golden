&wit.Resolve{
  Worlds: []*wit.World{
    &wit.World{
      Name:    "w",
      Imports: map[string]wit.WorldItem{
        "foo": &wit.Function{
          Name:    "foo",
          Kind:    &wit.Freestanding{},
          Params:  []wit.Param(nil),
          Results: []wit.Param{
            wit.Param{
              Name: "",
              Type: &wit.TypeDef{
                Name: &"g",
                Kind: &wit.TypeDef{
                  Name:  &"g",
                  Kind:  wit.Char{},
                  Owner: &wit.Interface{
                    Name:     &"foo",
                    TypeDefs: map[string]*wit.TypeDef{
                      "g": &wit.TypeDef{...},
                    },
                    Functions: map[string]*wit.Function{},
                    Package:   &wit.Package{
                      Name: wit.PackageName{
                        Namespace: "foo",
                        Name:      "foo",
                        Version:   (*semver.Version)(nil),
                      },
                      Interfaces: map[string]*wit.Interface{
                        "foo": &wit.Interface{...},
                      },
                      Worlds: map[string]*wit.World{
                        "w": &wit.World{...},
                      },
                      Docs: wit.Docs{
                        Contents: "",
                      },
                    },
                    Docs: wit.Docs{
                      Contents: "",
                    },
                  },
                  Docs: wit.Docs{
                    Contents: "",
                  },
                },
                Owner: &wit.World{...},
                Docs:  wit.Docs{
                  Contents: "",
                },
              },
            },
          },
          Docs: wit.Docs{
            Contents: "",
          },
        },
        "g":           &wit.TypeDef{...},
        "interface-0": &wit.Interface{...},
      },
      Exports: map[string]wit.WorldItem{},
      Package: (*wit.Package)(nil),
      Docs:    wit.Docs{
        Contents: "",
      },
    },
  },
  Interfaces: []*wit.Interface{
    &wit.Interface{...},
  },
  TypeDefs: []*wit.TypeDef{
    &wit.TypeDef{...},
    &wit.TypeDef{...},
  },
  Packages: []*wit.Package{
    &wit.Package{...},
  },
}