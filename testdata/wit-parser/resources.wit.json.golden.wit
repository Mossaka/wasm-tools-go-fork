package foo:bar;

interface foo {
    resource a {} // TODO: constructor, methods, and static functions;
    resource b {} // TODO: constructor, methods, and static functions;
    resource c {} // TODO: constructor, methods, and static functions;
    resource d {} // TODO: constructor, methods, and static functions;
    resource e {} // TODO: constructor, methods, and static functions;
}

interface i {
    resource a {} // TODO: constructor, methods, and static functions;
    type t1 = a;
    type t2 = borrow<a>;
    type t3 = borrow<t1>;
}

world w {
    import [constructor]c: func() -> own<c>;
    resource a {} // TODO: constructor, methods, and static functions;
    resource b {} // TODO: constructor, methods, and static functions;
    resource c {} // TODO: constructor, methods, and static functions;
}
