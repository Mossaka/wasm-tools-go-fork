&wit.Resolve{
    Worlds:     nil,
    Interfaces: {
        &wit.Interface{
            _typeOwner: wit._typeOwner{},
            _worldItem: wit._worldItem{},
            Name:       &"bar",
            TypeDefs:   {
                "the-type": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"the-type",
                    Kind:       wit.U32{},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar": &wit.Interface{(CYCLIC REFERENCE)},
                    "baz": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"baz",
                        TypeDefs:   {
                            "test": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"test",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{
                                    _type:      wit._type{},
                                    _worldItem: wit._worldItem{},
                                    Name:       &"the-type",
                                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                    Owner:      &wit.Interface{
                                        _typeOwner: wit._typeOwner{},
                                        _worldItem: wit._worldItem{},
                                        Name:       &"foo",
                                        TypeDefs:   {
                                            "the-type": &wit.TypeDef{(CYCLIC REFERENCE)},
                                        },
                                        Functions: {},
                                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                                        Docs:      wit.Docs{},
                                    },
                                    Docs: wit.Docs{},
                                },
                                Owner: &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                    "empty": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"empty",
                        TypeDefs:   {},
                        Functions:  {},
                        Package:    &wit.Package{(CYCLIC REFERENCE)},
                        Docs:       wit.Docs{},
                    },
                    "foo": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"foo",
                        TypeDefs:   {
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                    "trailing-comma": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"trailing-comma",
                        TypeDefs:   {
                            "the-foo": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-foo",
                                Kind:       &wit.Record{
                                    _typeDefKind: wit._typeDefKind{},
                                    Fields:       {
                                        {
                                            Name: "a",
                                            Type: &wit.TypeDef{
                                                _type:      wit._type{},
                                                _worldItem: wit._worldItem{},
                                                Name:       &"the-type",
                                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                                Docs:       wit.Docs{},
                                            },
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                    "use-from-empty": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"use-from-empty",
                        TypeDefs:   {},
                        Functions:  {},
                        Package:    &wit.Package{(CYCLIC REFERENCE)},
                        Docs:       wit.Docs{},
                    },
                    "use-multiple": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"use-multiple",
                        TypeDefs:   {
                            "test": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"test",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {
                            "some-function": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "some-function",
                                Kind:       &wit.Freestanding{},
                                Params:     {
                                    {
                                        Name: "x",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Results: {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Package: &wit.Package{(CYCLIC REFERENCE)},
                        Docs:    wit.Docs{},
                    },
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs: wit.Docs{},
        },
        &wit.Interface{
            _typeOwner: wit._typeOwner{},
            _worldItem: wit._worldItem{},
            Name:       &"foo",
            TypeDefs:   {
                "the-type": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"the-type",
                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar": &wit.Interface{(CYCLIC REFERENCE)},
                    "baz": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"baz",
                        TypeDefs:   {
                            "test": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"test",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                    "empty": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"empty",
                        TypeDefs:   {},
                        Functions:  {},
                        Package:    &wit.Package{(CYCLIC REFERENCE)},
                        Docs:       wit.Docs{},
                    },
                    "foo":            &wit.Interface{(CYCLIC REFERENCE)},
                    "trailing-comma": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"trailing-comma",
                        TypeDefs:   {
                            "the-foo": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-foo",
                                Kind:       &wit.Record{
                                    _typeDefKind: wit._typeDefKind{},
                                    Fields:       {
                                        {
                                            Name: "a",
                                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                    "use-from-empty": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"use-from-empty",
                        TypeDefs:   {},
                        Functions:  {},
                        Package:    &wit.Package{(CYCLIC REFERENCE)},
                        Docs:       wit.Docs{},
                    },
                    "use-multiple": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"use-multiple",
                        TypeDefs:   {
                            "test": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"test",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {
                            "some-function": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "some-function",
                                Kind:       &wit.Freestanding{},
                                Params:     {
                                    {
                                        Name: "x",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Results: {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Package: &wit.Package{(CYCLIC REFERENCE)},
                        Docs:    wit.Docs{},
                    },
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs: wit.Docs{},
        },
        &wit.Interface{
            _typeOwner: wit._typeOwner{},
            _worldItem: wit._worldItem{},
            Name:       &"baz",
            TypeDefs:   {
                "test": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"test",
                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
                "the-type": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"the-type",
                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar":   &wit.Interface{(CYCLIC REFERENCE)},
                    "baz":   &wit.Interface{(CYCLIC REFERENCE)},
                    "empty": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"empty",
                        TypeDefs:   {},
                        Functions:  {},
                        Package:    &wit.Package{(CYCLIC REFERENCE)},
                        Docs:       wit.Docs{},
                    },
                    "foo":            &wit.Interface{(CYCLIC REFERENCE)},
                    "trailing-comma": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"trailing-comma",
                        TypeDefs:   {
                            "the-foo": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-foo",
                                Kind:       &wit.Record{
                                    _typeDefKind: wit._typeDefKind{},
                                    Fields:       {
                                        {
                                            Name: "a",
                                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                    "use-from-empty": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"use-from-empty",
                        TypeDefs:   {},
                        Functions:  {},
                        Package:    &wit.Package{(CYCLIC REFERENCE)},
                        Docs:       wit.Docs{},
                    },
                    "use-multiple": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"use-multiple",
                        TypeDefs:   {
                            "test": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"test",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {
                            "some-function": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "some-function",
                                Kind:       &wit.Freestanding{},
                                Params:     {
                                    {
                                        Name: "x",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Results: {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Package: &wit.Package{(CYCLIC REFERENCE)},
                        Docs:    wit.Docs{},
                    },
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs: wit.Docs{},
        },
        &wit.Interface{
            _typeOwner: wit._typeOwner{},
            _worldItem: wit._worldItem{},
            Name:       &"empty",
            TypeDefs:   {},
            Functions:  {},
            Package:    &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar":            &wit.Interface{(CYCLIC REFERENCE)},
                    "baz":            &wit.Interface{(CYCLIC REFERENCE)},
                    "empty":          &wit.Interface{(CYCLIC REFERENCE)},
                    "foo":            &wit.Interface{(CYCLIC REFERENCE)},
                    "trailing-comma": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"trailing-comma",
                        TypeDefs:   {
                            "the-foo": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-foo",
                                Kind:       &wit.Record{
                                    _typeDefKind: wit._typeDefKind{},
                                    Fields:       {
                                        {
                                            Name: "a",
                                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                    "use-from-empty": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"use-from-empty",
                        TypeDefs:   {},
                        Functions:  {},
                        Package:    &wit.Package{(CYCLIC REFERENCE)},
                        Docs:       wit.Docs{},
                    },
                    "use-multiple": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"use-multiple",
                        TypeDefs:   {
                            "test": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"test",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {
                            "some-function": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "some-function",
                                Kind:       &wit.Freestanding{},
                                Params:     {
                                    {
                                        Name: "x",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Results: {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Package: &wit.Package{(CYCLIC REFERENCE)},
                        Docs:    wit.Docs{},
                    },
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs: wit.Docs{},
        },
        &wit.Interface{
            _typeOwner: wit._typeOwner{},
            _worldItem: wit._worldItem{},
            Name:       &"use-from-empty",
            TypeDefs:   {},
            Functions:  {},
            Package:    &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar":            &wit.Interface{(CYCLIC REFERENCE)},
                    "baz":            &wit.Interface{(CYCLIC REFERENCE)},
                    "empty":          &wit.Interface{(CYCLIC REFERENCE)},
                    "foo":            &wit.Interface{(CYCLIC REFERENCE)},
                    "trailing-comma": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"trailing-comma",
                        TypeDefs:   {
                            "the-foo": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-foo",
                                Kind:       &wit.Record{
                                    _typeDefKind: wit._typeDefKind{},
                                    Fields:       {
                                        {
                                            Name: "a",
                                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                    "use-from-empty": &wit.Interface{(CYCLIC REFERENCE)},
                    "use-multiple":   &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"use-multiple",
                        TypeDefs:   {
                            "test": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"test",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {
                            "some-function": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "some-function",
                                Kind:       &wit.Freestanding{},
                                Params:     {
                                    {
                                        Name: "x",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Results: {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Package: &wit.Package{(CYCLIC REFERENCE)},
                        Docs:    wit.Docs{},
                    },
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs: wit.Docs{},
        },
        &wit.Interface{
            _typeOwner: wit._typeOwner{},
            _worldItem: wit._worldItem{},
            Name:       &"use-multiple",
            TypeDefs:   {
                "test": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"test",
                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
                "the-type": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"the-type",
                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
            },
            Functions: {
                "some-function": &wit.Function{
                    _worldItem: wit._worldItem{},
                    Name:       "some-function",
                    Kind:       &wit.Freestanding{},
                    Params:     {
                        {
                            Name: "x",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Results: {
                        {
                            Name: "",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Docs: wit.Docs{},
                },
            },
            Package: &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar":            &wit.Interface{(CYCLIC REFERENCE)},
                    "baz":            &wit.Interface{(CYCLIC REFERENCE)},
                    "empty":          &wit.Interface{(CYCLIC REFERENCE)},
                    "foo":            &wit.Interface{(CYCLIC REFERENCE)},
                    "trailing-comma": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"trailing-comma",
                        TypeDefs:   {
                            "the-foo": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-foo",
                                Kind:       &wit.Record{
                                    _typeDefKind: wit._typeDefKind{},
                                    Fields:       {
                                        {
                                            Name: "a",
                                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "the-type": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"the-type",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                    "use-from-empty": &wit.Interface{(CYCLIC REFERENCE)},
                    "use-multiple":   &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs: wit.Docs{},
        },
        &wit.Interface{
            _typeOwner: wit._typeOwner{},
            _worldItem: wit._worldItem{},
            Name:       &"trailing-comma",
            TypeDefs:   {
                "the-foo": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"the-foo",
                    Kind:       &wit.Record{
                        _typeDefKind: wit._typeDefKind{},
                        Fields:       {
                            {
                                Name: "a",
                                Type: &wit.TypeDef{
                                    _type:      wit._type{},
                                    _worldItem: wit._worldItem{},
                                    Name:       &"the-type",
                                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                    Docs:       wit.Docs{},
                                },
                                Docs: wit.Docs{},
                            },
                        },
                    },
                    Owner: &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:  wit.Docs{},
                },
                "the-type": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"the-type",
                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "bar":            &wit.Interface{(CYCLIC REFERENCE)},
                    "baz":            &wit.Interface{(CYCLIC REFERENCE)},
                    "empty":          &wit.Interface{(CYCLIC REFERENCE)},
                    "foo":            &wit.Interface{(CYCLIC REFERENCE)},
                    "trailing-comma": &wit.Interface{(CYCLIC REFERENCE)},
                    "use-from-empty": &wit.Interface{(CYCLIC REFERENCE)},
                    "use-multiple":   &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {},
                Docs:   wit.Docs{},
            },
            Docs: wit.Docs{},
        },
    },
    TypeDefs: {
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"the-type",
            Kind:       wit.U32{},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"the-type",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"the-type",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"test",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"the-type",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"test",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"the-type",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"the-foo",
            Kind:       &wit.Record{
                _typeDefKind: wit._typeDefKind{},
                Fields:       {
                    {
                        Name: "a",
                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        Docs: wit.Docs{},
                    },
                },
            },
            Owner: &wit.Interface{(CYCLIC REFERENCE)},
            Docs:  wit.Docs{},
        },
    },
    Packages: {
        &wit.Package{
            Name: wit.Ident{
                Namespace: "foo",
                Package:   "foo",
                Extension: "",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "bar":            &wit.Interface{(CYCLIC REFERENCE)},
                "baz":            &wit.Interface{(CYCLIC REFERENCE)},
                "empty":          &wit.Interface{(CYCLIC REFERENCE)},
                "foo":            &wit.Interface{(CYCLIC REFERENCE)},
                "trailing-comma": &wit.Interface{(CYCLIC REFERENCE)},
                "use-from-empty": &wit.Interface{(CYCLIC REFERENCE)},
                "use-multiple":   &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {},
            Docs:   wit.Docs{},
        },
    },
}