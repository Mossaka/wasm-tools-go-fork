&wit.Resolve{
    Worlds: {
        &wit.World{
            _typeOwner: wit._typeOwner{},
            Name:       "foo",
            Imports:    {
                "a": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"a",
                    Kind:       wit.U32{},
                    Owner:      &wit.World{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
                "b": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"b",
                    Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                    Owner:      &wit.World{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
            },
            Exports: {
                "c": &wit.Function{
                    _worldItem: wit._worldItem{},
                    Name:       "c",
                    Kind:       &wit.Freestanding{},
                    Params:     {
                        {
                            Name: "a",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Results: {
                        {
                            Name: "",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Docs: wit.Docs{},
                },
            },
            Package: &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "disambiguate": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"disambiguate",
                        TypeDefs:   {
                            "t": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"t",
                                Kind:       wit.U32{},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                },
                Worlds: {
                    "bar": &wit.World{
                        _typeOwner: wit._typeOwner{},
                        Name:       "bar",
                        Imports:    {
                            "interface-0": &wit.Interface{(CYCLIC REFERENCE)},
                            "t":           &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"t",
                                Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
                                Owner:      &wit.World{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Exports: {
                            "foo": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "foo",
                                Kind:       &wit.Freestanding{(CYCLIC REFERENCE)},
                                Params:     nil,
                                Results:    {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Package: &wit.Package{(CYCLIC REFERENCE)},
                        Docs:    wit.Docs{},
                    },
                    "foo":      &wit.World{(CYCLIC REFERENCE)},
                    "the-test": &wit.World{
                        _typeOwner: wit._typeOwner{},
                        Name:       "the-test",
                        Imports:    {
                            "a": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"a",
                                Kind:       &wit.Record{
                                    _typeDefKind: wit._typeDefKind{},
                                    Fields:       {
                                        {
                                            Name: "x",
                                            Type: wit.U32{},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.World{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "b": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"b",
                                Kind:       &wit.Variant{
                                    _typeDefKind: wit._typeDefKind{},
                                    Cases:        {
                                        {
                                            Name: "c",
                                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.World{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "foo": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "foo",
                                Kind:       &wit.Freestanding{(CYCLIC REFERENCE)},
                                Params:     {
                                    {
                                        Name: "a",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Results: {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Exports: {
                            "bar": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "bar",
                                Kind:       &wit.Freestanding{(CYCLIC REFERENCE)},
                                Params:     {
                                    {
                                        Name: "a",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Results: {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Package: &wit.Package{(CYCLIC REFERENCE)},
                        Docs:    wit.Docs{},
                    },
                },
                Docs: wit.Docs{},
            },
            Docs: wit.Docs{},
        },
        &wit.World{
            _typeOwner: wit._typeOwner{},
            Name:       "bar",
            Imports:    {
                "interface-0": &wit.Interface{
                    _typeOwner: wit._typeOwner{},
                    _worldItem: wit._worldItem{},
                    Name:       &"disambiguate",
                    TypeDefs:   {
                        "t": &wit.TypeDef{
                            _type:      wit._type{},
                            _worldItem: wit._worldItem{},
                            Name:       &"t",
                            Kind:       wit.U32{},
                            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                            Docs:       wit.Docs{},
                        },
                    },
                    Functions: {},
                    Package:   &wit.Package{(CYCLIC REFERENCE)},
                    Docs:      wit.Docs{},
                },
                "t": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"t",
                    Kind:       &wit.TypeDef{
                        _type:      wit._type{},
                        _worldItem: wit._worldItem{},
                        Name:       &"t",
                        Kind:       wit.U32{},
                        Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                        Docs:       wit.Docs{},
                    },
                    Owner: &wit.World{(CYCLIC REFERENCE)},
                    Docs:  wit.Docs{},
                },
            },
            Exports: {
                "foo": &wit.Function{
                    _worldItem: wit._worldItem{},
                    Name:       "foo",
                    Kind:       &wit.Freestanding{},
                    Params:     nil,
                    Results:    {
                        {
                            Name: "",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Docs: wit.Docs{},
                },
            },
            Package: &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "disambiguate": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"disambiguate",
                        TypeDefs:   {
                            "t": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"t",
                                Kind:       wit.U32{},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                },
                Worlds: {
                    "bar":      &wit.World{(CYCLIC REFERENCE)},
                    "foo":      &wit.World{(CYCLIC REFERENCE)},
                    "the-test": &wit.World{
                        _typeOwner: wit._typeOwner{},
                        Name:       "the-test",
                        Imports:    {
                            "a": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"a",
                                Kind:       &wit.Record{
                                    _typeDefKind: wit._typeDefKind{},
                                    Fields:       {
                                        {
                                            Name: "x",
                                            Type: wit.U32{},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.World{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "b": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"b",
                                Kind:       &wit.Variant{
                                    _typeDefKind: wit._typeDefKind{},
                                    Cases:        {
                                        {
                                            Name: "c",
                                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                            Docs: wit.Docs{},
                                        },
                                    },
                                },
                                Owner: &wit.World{(CYCLIC REFERENCE)},
                                Docs:  wit.Docs{},
                            },
                            "foo": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "foo",
                                Kind:       &wit.Freestanding{(CYCLIC REFERENCE)},
                                Params:     {
                                    {
                                        Name: "a",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Results: {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Exports: {
                            "bar": &wit.Function{
                                _worldItem: wit._worldItem{},
                                Name:       "bar",
                                Kind:       &wit.Freestanding{(CYCLIC REFERENCE)},
                                Params:     {
                                    {
                                        Name: "a",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Results: {
                                    {
                                        Name: "",
                                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                    },
                                },
                                Docs: wit.Docs{},
                            },
                        },
                        Package: &wit.Package{(CYCLIC REFERENCE)},
                        Docs:    wit.Docs{},
                    },
                },
                Docs: wit.Docs{},
            },
            Docs: wit.Docs{},
        },
        &wit.World{
            _typeOwner: wit._typeOwner{},
            Name:       "the-test",
            Imports:    {
                "a": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"a",
                    Kind:       &wit.Record{
                        _typeDefKind: wit._typeDefKind{},
                        Fields:       {
                            {
                                Name: "x",
                                Type: wit.U32{},
                                Docs: wit.Docs{},
                            },
                        },
                    },
                    Owner: &wit.World{(CYCLIC REFERENCE)},
                    Docs:  wit.Docs{},
                },
                "b": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"b",
                    Kind:       &wit.Variant{
                        _typeDefKind: wit._typeDefKind{},
                        Cases:        {
                            {
                                Name: "c",
                                Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                                Docs: wit.Docs{},
                            },
                        },
                    },
                    Owner: &wit.World{(CYCLIC REFERENCE)},
                    Docs:  wit.Docs{},
                },
                "foo": &wit.Function{
                    _worldItem: wit._worldItem{},
                    Name:       "foo",
                    Kind:       &wit.Freestanding{},
                    Params:     {
                        {
                            Name: "a",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Results: {
                        {
                            Name: "",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Docs: wit.Docs{},
                },
            },
            Exports: {
                "bar": &wit.Function{
                    _worldItem: wit._worldItem{},
                    Name:       "bar",
                    Kind:       &wit.Freestanding{},
                    Params:     {
                        {
                            Name: "a",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Results: {
                        {
                            Name: "",
                            Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        },
                    },
                    Docs: wit.Docs{},
                },
            },
            Package: &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "disambiguate": &wit.Interface{
                        _typeOwner: wit._typeOwner{},
                        _worldItem: wit._worldItem{},
                        Name:       &"disambiguate",
                        TypeDefs:   {
                            "t": &wit.TypeDef{
                                _type:      wit._type{},
                                _worldItem: wit._worldItem{},
                                Name:       &"t",
                                Kind:       wit.U32{},
                                Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                                Docs:       wit.Docs{},
                            },
                        },
                        Functions: {},
                        Package:   &wit.Package{(CYCLIC REFERENCE)},
                        Docs:      wit.Docs{},
                    },
                },
                Worlds: {
                    "bar":      &wit.World{(CYCLIC REFERENCE)},
                    "foo":      &wit.World{(CYCLIC REFERENCE)},
                    "the-test": &wit.World{(CYCLIC REFERENCE)},
                },
                Docs: wit.Docs{},
            },
            Docs: wit.Docs{},
        },
    },
    Interfaces: {
        &wit.Interface{
            _typeOwner: wit._typeOwner{},
            _worldItem: wit._worldItem{},
            Name:       &"disambiguate",
            TypeDefs:   {
                "t": &wit.TypeDef{
                    _type:      wit._type{},
                    _worldItem: wit._worldItem{},
                    Name:       &"t",
                    Kind:       wit.U32{},
                    Owner:      &wit.Interface{(CYCLIC REFERENCE)},
                    Docs:       wit.Docs{},
                },
            },
            Functions: {},
            Package:   &wit.Package{
                Name: wit.Ident{
                    Namespace: "foo",
                    Package:   "foo",
                    Extension: "",
                    Version:   (*semver.Version)(nil),
                },
                Interfaces: {
                    "disambiguate": &wit.Interface{(CYCLIC REFERENCE)},
                },
                Worlds: {
                    "bar":      &wit.World{(CYCLIC REFERENCE)},
                    "foo":      &wit.World{(CYCLIC REFERENCE)},
                    "the-test": &wit.World{(CYCLIC REFERENCE)},
                },
                Docs: wit.Docs{},
            },
            Docs: wit.Docs{},
        },
    },
    TypeDefs: {
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"t",
            Kind:       wit.U32{},
            Owner:      &wit.Interface{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"a",
            Kind:       wit.U32{},
            Owner:      &wit.World{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"b",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.World{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"t",
            Kind:       &wit.TypeDef{(CYCLIC REFERENCE)},
            Owner:      &wit.World{(CYCLIC REFERENCE)},
            Docs:       wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"a",
            Kind:       &wit.Record{
                _typeDefKind: wit._typeDefKind{},
                Fields:       {
                    {
                        Name: "x",
                        Type: wit.U32{},
                        Docs: wit.Docs{},
                    },
                },
            },
            Owner: &wit.World{(CYCLIC REFERENCE)},
            Docs:  wit.Docs{},
        },
        &wit.TypeDef{
            _type:      wit._type{},
            _worldItem: wit._worldItem{},
            Name:       &"b",
            Kind:       &wit.Variant{
                _typeDefKind: wit._typeDefKind{},
                Cases:        {
                    {
                        Name: "c",
                        Type: &wit.TypeDef{(CYCLIC REFERENCE)},
                        Docs: wit.Docs{},
                    },
                },
            },
            Owner: &wit.World{(CYCLIC REFERENCE)},
            Docs:  wit.Docs{},
        },
    },
    Packages: {
        &wit.Package{
            Name: wit.Ident{
                Namespace: "foo",
                Package:   "foo",
                Extension: "",
                Version:   (*semver.Version)(nil),
            },
            Interfaces: {
                "disambiguate": &wit.Interface{(CYCLIC REFERENCE)},
            },
            Worlds: {
                "bar":      &wit.World{(CYCLIC REFERENCE)},
                "foo":      &wit.World{(CYCLIC REFERENCE)},
                "the-test": &wit.World{(CYCLIC REFERENCE)},
            },
            Docs: wit.Docs{},
        },
    },
}