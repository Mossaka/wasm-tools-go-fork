&wit.Resolve{
  Worlds: []*wit.World{
    &wit.World{
      Name:    "foo",
      Imports: map[string]wit.WorldItem{
        "foo": &wit.Interface{
          Name:      (*string)(nil),
          TypeDefs:  map[string]*wit.TypeDef{},
          Functions: map[string]*wit.Function{
            "a": &wit.Function{
              Name:    "a",
              Kind:    &wit.Freestanding{},
              Params:  []wit.Param(nil),
              Results: []wit.Param{
                wit.Param{
                  Name: "",
                  Type: &wit.TypeDef{
                    Name: (*string)(nil),
                    Kind: &wit.List{
                      Type: wit.U8{},
                    },
                    Owner: nil,
                    Docs:  wit.Docs{
                      Contents: "",
                    },
                  },
                },
              },
              Docs: wit.Docs{
                Contents: "",
              },
            },
          },
          Package: &wit.Package{
            Name: wit.PackageName{
              Namespace: "foo",
              Name:      "shared-items",
              Version:   (*semver.Version)(nil),
            },
            Interfaces: map[string]*wit.Interface{},
            Worlds:     map[string]*wit.World{
              "foo": &wit.World{...},
            },
            Docs: wit.Docs{
              Contents: "",
            },
          },
          Docs: wit.Docs{
            Contents: "",
          },
        },
      },
      Exports: map[string]wit.WorldItem{
        "bar": &wit.Interface{
          Name:      (*string)(nil),
          TypeDefs:  map[string]*wit.TypeDef{},
          Functions: map[string]*wit.Function{
            "a": &wit.Function{
              Name:    "a",
              Kind:    &wit.Freestanding{...},
              Params:  []wit.Param(nil),
              Results: []wit.Param{
                wit.Param{
                  Name: "",
                  Type: &wit.TypeDef{
                    Name: (*string)(nil),
                    Kind: &wit.Tuple{
                      Types: []wit.Type{
                        &wit.TypeDef{...},
                      },
                    },
                    Owner: nil,
                    Docs:  wit.Docs{
                      Contents: "",
                    },
                  },
                },
              },
              Docs: wit.Docs{
                Contents: "",
              },
            },
          },
          Package: &wit.Package{...},
          Docs:    wit.Docs{
            Contents: "",
          },
        },
      },
      Package: &wit.Package{...},
      Docs:    wit.Docs{
        Contents: "",
      },
    },
  },
  Interfaces: []*wit.Interface{
    &wit.Interface{...},
    &wit.Interface{...},
  },
  TypeDefs: []*wit.TypeDef{
    &wit.TypeDef{...},
    &wit.TypeDef{...},
  },
  Packages: []*wit.Package{
    &wit.Package{...},
  },
}