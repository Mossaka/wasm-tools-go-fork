package example:tuples;

interface tuples {
	type t0 = tuple<>;
	type t1 = tuple<string>;
	type t2 = tuple<string, bool>;
	type t3 = tuple<string, bool, u8>;
	type t4 = tuple<string, bool, u8, u16>;
	type t5 = tuple<string, bool, u8, u16, u32>;
	type t6 = tuple<string, bool, u8, u16, u32, u64>;
	type t7 = tuple<string, bool, u8, u16, u32, u64, f32>;
	type t8 = tuple<string, bool, u8, u16, u32, u64, f32, f64>;
	type t9 = tuple<string, bool, u8, u16, u32, u64, f32, f64, s8>;
	type t10 = tuple<string, bool, u8, u16, u32, u64, f32, f64, s8, s16>;
	f0: func(t: t0) -> tuple<>;
	f1: func(t: t1) -> tuple<string>;
	f2: func(t: t2) -> tuple<string, bool>;
	f3: func(t: t3) -> tuple<string, bool, u8>;
	f4: func(t: t4) -> tuple<string, bool, u8, u16>;
	f5: func(t: t5) -> tuple<string, bool, u8, u16, u32>;
	f6: func(t: t6) -> tuple<string, bool, u8, u16, u32, u64>;
	f7: func(t: t7) -> tuple<string, bool, u8, u16, u32, u64, f32>;
	f8: func(t: t8) -> tuple<string, bool, u8, u16, u32, u64, f32, f64>;
	f9: func(t: t9) -> tuple<string, bool, u8, u16, u32, u64, f32, f64, s8>;
	f10: func(t: t10) -> tuple<string, bool, u8, u16, u32, u64, f32, f64, s8, s16>;
	g0: func(t: tuple<>) -> tuple<>;
	g1: func(t: tuple<string>) -> tuple<string>;
	g2: func(t: tuple<string, bool>) -> tuple<string, bool>;
	g3: func(t: tuple<string, bool, u8>) -> tuple<string, bool, u8>;
	g4: func(t: tuple<string, bool, u8, u16>) -> tuple<string, bool, u8, u16>;
	g5: func(t: tuple<string, bool, u8, u16, u32>) -> tuple<string, bool, u8, u16, u32>;
	g6: func(t: tuple<string, bool, u8, u16, u32, u64>) -> tuple<string, bool, u8, u16, u32, u64>;
	g7: func(t: tuple<string, bool, u8, u16, u32, u64, f32>) -> tuple<string, bool, u8, u16, u32, u64, f32>;
	g8: func(t: tuple<string, bool, u8, u16, u32, u64, f32, f64>) -> tuple<string, bool, u8, u16, u32, u64, f32, f64>;
	g9: func(t: tuple<string, bool, u8, u16, u32, u64, f32, f64, s8>) -> tuple<string, bool, u8, u16, u32, u64, f32, f64, s8>;
	g10: func(t: tuple<string, bool, u8, u16, u32, u64, f32, f64, s8, s16>) -> tuple<string, bool, u8, u16, u32, u64, f32, f64, s8, s16>;
}

world w {
	import tuples;
	export tuples;
}
