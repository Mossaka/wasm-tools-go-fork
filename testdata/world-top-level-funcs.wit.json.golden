&wit.Resolve{
  Worlds: []*wit.World{
    &wit.World{
      Name:    "foo",
      Imports: map[string]wit.WorldItem{
        "bar": &wit.Function{
          Name:   "bar",
          Kind:   &wit.Freestanding{},
          Params: []wit.Param{
            wit.Param{
              Name: "arg",
              Type: &wit.TypeDef{
                Name: (*string)(nil),
                Kind: &wit.List{
                  Type: wit.U32{},
                },
                Owner: nil,
                Docs:  wit.Docs{
                  Contents: "",
                },
              },
            },
          },
          Results: []wit.Param(nil),
          Docs:    wit.Docs{
            Contents: "",
          },
        },
        "foo": &wit.Function{
          Name:    "foo",
          Kind:    &wit.Freestanding{...},
          Params:  []wit.Param(nil),
          Results: []wit.Param(nil),
          Docs:    wit.Docs{
            Contents: "",
          },
        },
      },
      Exports: map[string]wit.WorldItem{
        "foo2": &wit.Function{
          Name:    "foo2",
          Kind:    &wit.Freestanding{...},
          Params:  []wit.Param(nil),
          Results: []wit.Param(nil),
          Docs:    wit.Docs{
            Contents: "",
          },
        },
        "some-name": &wit.Function{
          Name:    "some-name",
          Kind:    &wit.Freestanding{...},
          Params:  []wit.Param(nil),
          Results: []wit.Param{
            wit.Param{
              Name: "",
              Type: &wit.TypeDef{
                Name: (*string)(nil),
                Kind: &wit.List{
                  Type: &wit.TypeDef{
                    Name: (*string)(nil),
                    Kind: &wit.Option{
                      Type: wit.U32{},
                    },
                    Owner: nil,
                    Docs:  wit.Docs{
                      Contents: "",
                    },
                  },
                },
                Owner: nil,
                Docs:  wit.Docs{
                  Contents: "",
                },
              },
            },
          },
          Docs: wit.Docs{
            Contents: "",
          },
        },
      },
      Package: &wit.Package{
        Name: wit.PackageName{
          Namespace: "foo",
          Name:      "foo",
          Version:   (*semver.Version)(nil),
        },
        Interfaces: map[string]*wit.Interface{},
        Worlds:     map[string]*wit.World{
          "foo": &wit.World{...},
        },
        Docs: wit.Docs{
          Contents: "",
        },
      },
      Docs: wit.Docs{
        Contents: "",
      },
    },
  },
  Interfaces: []*wit.Interface(nil),
  TypeDefs:   []*wit.TypeDef{
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
  },
  Packages: []*wit.Package{
    &wit.Package{...},
  },
}