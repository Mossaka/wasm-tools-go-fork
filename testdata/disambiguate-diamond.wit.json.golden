&wit.Resolve{
  Worlds: []*wit.World{
    &wit.World{
      Name:    "foo",
      Imports: map[string]wit.WorldItem{
        "bar": &wit.Interface{
          Name:     (*string)(nil),
          TypeDefs: map[string]*wit.TypeDef{
            "the-type": &wit.TypeDef{
              Name: &"the-type",
              Kind: &wit.TypeDef{
                Name:  &"the-type",
                Kind:  wit.U32{},
                Owner: &wit.Interface{
                  Name:     &"shared2",
                  TypeDefs: map[string]*wit.TypeDef{
                    "the-type": &wit.TypeDef{...},
                  },
                  Functions: map[string]*wit.Function{},
                  Package:   &wit.Package{
                    Name: wit.PackageName{
                      Namespace: "foo",
                      Name:      "diamond",
                      Version:   (*semver.Version)(nil),
                    },
                    Interfaces: map[string]*wit.Interface{
                      "shared1": &wit.Interface{
                        Name:     &"shared1",
                        TypeDefs: map[string]*wit.TypeDef{
                          "the-type": &wit.TypeDef{
                            Name:  &"the-type",
                            Kind:  wit.U32{},
                            Owner: &wit.Interface{...},
                            Docs:  wit.Docs{
                              Contents: "",
                            },
                          },
                        },
                        Functions: map[string]*wit.Function{},
                        Package:   &wit.Package{...},
                        Docs:      wit.Docs{
                          Contents: "",
                        },
                      },
                      "shared2": &wit.Interface{...},
                    },
                    Worlds: map[string]*wit.World{
                      "foo": &wit.World{...},
                    },
                    Docs: wit.Docs{
                      Contents: "",
                    },
                  },
                  Docs: wit.Docs{
                    Contents: "",
                  },
                },
                Docs: wit.Docs{
                  Contents: "",
                },
              },
              Owner: &wit.Interface{...},
              Docs:  wit.Docs{
                Contents: "",
              },
            },
          },
          Functions: map[string]*wit.Function{},
          Package:   &wit.Package{...},
          Docs:      wit.Docs{
            Contents: "",
          },
        },
        "foo": &wit.Interface{
          Name:     (*string)(nil),
          TypeDefs: map[string]*wit.TypeDef{
            "the-type": &wit.TypeDef{
              Name:  &"the-type",
              Kind:  &wit.TypeDef{...},
              Owner: &wit.Interface{...},
              Docs:  wit.Docs{
                Contents: "",
              },
            },
          },
          Functions: map[string]*wit.Function{},
          Package:   &wit.Package{...},
          Docs:      wit.Docs{
            Contents: "",
          },
        },
        "interface-0": &wit.Interface{...},
        "interface-1": &wit.Interface{...},
      },
      Exports: map[string]wit.WorldItem{},
      Package: (*wit.Package)(nil),
      Docs:    wit.Docs{
        Contents: "",
      },
    },
  },
  Interfaces: []*wit.Interface{
    &wit.Interface{...},
    &wit.Interface{...},
    &wit.Interface{...},
    &wit.Interface{...},
  },
  TypeDefs: []*wit.TypeDef{
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
  },
  Packages: []*wit.Package{
    &wit.Package{...},
  },
}