&wit.Resolve{
  Worlds: []*wit.World{
    &wit.World{
      Name:    "proxy",
      Imports: map[string]wit.WorldItem{
        "interface-0": &wit.Interface{
          Name:     &"types",
          TypeDefs: map[string]*wit.TypeDef{
            "request": &wit.TypeDef{
              Name:  &"request",
              Kind:  nil,
              Owner: &wit.Interface{...},
              Docs:  wit.Docs{
                Contents: "",
              },
            },
            "response": &wit.TypeDef{
              Name:  &"response",
              Kind:  nil,
              Owner: &wit.Interface{...},
              Docs:  wit.Docs{
                Contents: "",
              },
            },
          },
          Functions: map[string]*wit.Function{
            "[method]request.bar": &wit.Function{
              Name: "[method]request.bar",
              Kind: &wit.Method{
                Type: &wit.TypeDef{...},
              },
              Params: []wit.Param{
                wit.Param{
                  Name: "self",
                  Type: &wit.TypeDef{
                    Name: (*string)(nil),
                    Kind: &wit.BorrowHandle{
                      Type: &wit.TypeDef{...},
                    },
                    Owner: nil,
                    Docs:  wit.Docs{
                      Contents: "",
                    },
                  },
                },
                wit.Param{
                  Name: "arg",
                  Type: &wit.TypeDef{
                    Name: (*string)(nil),
                    Kind: &wit.List{
                      Type: wit.U32{},
                    },
                    Owner: nil,
                    Docs:  wit.Docs{
                      Contents: "",
                    },
                  },
                },
              },
              Results: []wit.Param(nil),
              Docs:    wit.Docs{
                Contents: "",
              },
            },
            "[method]request.foo": &wit.Function{
              Name: "[method]request.foo",
              Kind: &wit.Method{
                Type: &wit.TypeDef{...},
              },
              Params: []wit.Param{
                wit.Param{
                  Name: "self",
                  Type: &wit.TypeDef{...},
                },
              },
              Results: []wit.Param(nil),
              Docs:    wit.Docs{
                Contents: "",
              },
            },
            "[method]response.bar": &wit.Function{
              Name: "[method]response.bar",
              Kind: &wit.Method{
                Type: &wit.TypeDef{...},
              },
              Params: []wit.Param{
                wit.Param{
                  Name: "self",
                  Type: &wit.TypeDef{
                    Name: (*string)(nil),
                    Kind: &wit.BorrowHandle{
                      Type: &wit.TypeDef{...},
                    },
                    Owner: nil,
                    Docs:  wit.Docs{
                      Contents: "",
                    },
                  },
                },
                wit.Param{
                  Name: "arg",
                  Type: &wit.TypeDef{...},
                },
              },
              Results: []wit.Param(nil),
              Docs:    wit.Docs{
                Contents: "",
              },
            },
            "[method]response.foo": &wit.Function{
              Name: "[method]response.foo",
              Kind: &wit.Method{
                Type: &wit.TypeDef{...},
              },
              Params: []wit.Param{
                wit.Param{
                  Name: "self",
                  Type: &wit.TypeDef{...},
                },
              },
              Results: []wit.Param(nil),
              Docs:    wit.Docs{
                Contents: "",
              },
            },
          },
          Package: &wit.Package{
            Name: wit.PackageName{
              Namespace: "foo",
              Name:      "foo",
              Version:   (*semver.Version)(nil),
            },
            Interfaces: map[string]*wit.Interface{
              "handler": &wit.Interface{
                Name:     &"handler",
                TypeDefs: map[string]*wit.TypeDef{
                  "request": &wit.TypeDef{
                    Name:  &"request",
                    Kind:  &wit.TypeDef{...},
                    Owner: &wit.Interface{...},
                    Docs:  wit.Docs{
                      Contents: "",
                    },
                  },
                  "response": &wit.TypeDef{
                    Name:  &"response",
                    Kind:  &wit.TypeDef{...},
                    Owner: &wit.Interface{...},
                    Docs:  wit.Docs{
                      Contents: "",
                    },
                  },
                },
                Functions: map[string]*wit.Function{
                  "handle": &wit.Function{
                    Name:   "handle",
                    Kind:   &wit.Freestanding{},
                    Params: []wit.Param{
                      wit.Param{
                        Name: "some",
                        Type: &wit.TypeDef{
                          Name: (*string)(nil),
                          Kind: &wit.BorrowHandle{
                            Type: &wit.TypeDef{...},
                          },
                          Owner: nil,
                          Docs:  wit.Docs{
                            Contents: "",
                          },
                        },
                      },
                    },
                    Results: []wit.Param{
                      wit.Param{
                        Name: "",
                        Type: &wit.TypeDef{
                          Name: (*string)(nil),
                          Kind: &wit.BorrowHandle{
                            Type: &wit.TypeDef{...},
                          },
                          Owner: nil,
                          Docs:  wit.Docs{
                            Contents: "",
                          },
                        },
                      },
                    },
                    Docs: wit.Docs{
                      Contents: "",
                    },
                  },
                  "handle-owned": &wit.Function{
                    Name:   "handle-owned",
                    Kind:   &wit.Freestanding{...},
                    Params: []wit.Param{
                      wit.Param{
                        Name: "some",
                        Type: &wit.TypeDef{
                          Name: (*string)(nil),
                          Kind: &wit.OwnHandle{
                            Type: &wit.TypeDef{...},
                          },
                          Owner: nil,
                          Docs:  wit.Docs{
                            Contents: "",
                          },
                        },
                      },
                    },
                    Results: []wit.Param{
                      wit.Param{
                        Name: "",
                        Type: &wit.TypeDef{
                          Name: (*string)(nil),
                          Kind: &wit.OwnHandle{
                            Type: &wit.TypeDef{...},
                          },
                          Owner: nil,
                          Docs:  wit.Docs{
                            Contents: "",
                          },
                        },
                      },
                    },
                    Docs: wit.Docs{
                      Contents: "",
                    },
                  },
                },
                Package: &wit.Package{...},
                Docs:    wit.Docs{
                  Contents: "",
                },
              },
              "types": &wit.Interface{...},
            },
            Worlds: map[string]*wit.World{
              "proxy": &wit.World{...},
            },
            Docs: wit.Docs{
              Contents: "",
            },
          },
          Docs: wit.Docs{
            Contents: "",
          },
        },
        "interface-1": &wit.Interface{...},
      },
      Exports: map[string]wit.WorldItem{
        "interface-1": &wit.Interface{...},
      },
      Package: (*wit.Package)(nil),
      Docs:    wit.Docs{
        Contents: "",
      },
    },
  },
  Interfaces: []*wit.Interface{
    &wit.Interface{...},
    &wit.Interface{...},
  },
  TypeDefs: []*wit.TypeDef{
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
    &wit.TypeDef{...},
  },
  Packages: []*wit.Package{
    &wit.Package{...},
  },
}