// Code generated by wit-bindgen-go. DO NOT EDIT.

//go:build !wasip1

// Package terminalstdout represents the interface "wasi:cli/terminal-stdout@0.2.0".
//
// An interface providing an optional `terminal-output` for stdout as a
// link-time authority.
package terminalstdout

import (
	"github.com/ydnar/wasm-tools-go/cm"
	terminaloutput "github.com/ydnar/wasm-tools-go/wasi/cli/terminal-output"
)

// TerminalOutput represents the resource "wasi:cli/terminal-output@0.2.0#terminal-output".
//
// This is a type alias. See [terminaloutput.TerminalOutput] for more information.
type TerminalOutput = terminaloutput.TerminalOutput

// GetTerminalStdout represents function "wasi:cli/terminal-stdout@0.2.0#get-terminal-stdout".
//
// If stdout is connected to a terminal, return a `terminal-output` handle
// allowing further interaction with it.
//
//	get-terminal-stdout: func() -> option<own<terminal-output>>
//
//go:nosplit
func GetTerminalStdout() cm.Option[TerminalOutput] {
	var result cm.Option[TerminalOutput]
	getTerminalStdout(&result)
	return result
}

//go:wasmimport wasi:cli/terminal-stdout@0.2.0 get-terminal-stdout
//go:noescape
func getTerminalStdout(result *cm.Option[TerminalOutput])
